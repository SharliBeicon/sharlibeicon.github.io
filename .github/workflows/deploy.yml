name: Publish on GitHub Pages

on:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Cache Linux dependencies
        uses: actions/cache@v3
        with:
          path: /var/cache/apt
          key: linux-dependencies-${{ runner.os }}-${{ hashFiles('**/playground/**') }}
          restore-keys: |
            linux-dependencies-${{ runner.os }}-

      - name: Install Linux dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwayland-dev wayland-protocols libxkbcommon-dev libx11-dev libxcursor-dev libxi-dev

      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v14

      - name: Cache Emscripten path
        uses: actions/cache@v3
        with:
          path: ${{ env.EMSDK_PATH }}
          key: emscripten-${{ runner.os }}-${{ hashFiles('**/playground/**') }}
          restore-keys: |
            emscripten-${{ runner.os }}-

      - name: Get Emscripten path
        id: emscripten-path
        run: |
          EMSDK_PATH=$(dirname $(which emcc))
          echo "EMSDK_PATH=$EMSDK_PATH" >> $GITHUB_ENV
          echo "Emscripten path: $EMSDK_PATH"

      - name: Setup Zig Compiler
        uses: mlugg/setup-zig@v1
        with:
          version: 0.14.0

      - name: Cache Zig build output
        uses: actions/cache@v3
        with:
          path: playground/zig-out
          key: zig-build-${{ runner.os }}-${{ hashFiles('**/playground/**') }}
          restore-keys: |
            zig-build-${{ runner.os }}-

      - name: Compile Playground for wasm32-emscripten
        run: |
          cd playground
          zig build -Dtarget=wasm32-emscripten --sysroot $EMSDK_PATH
          rm zig-out/htmlout/index.html
          mv zig-out/htmlout/* ../src/assets/static
          cd ..

      - name: Setup Deno environment
        uses: denoland/setup-deno@v2

      - name: Cache Deno dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/deno
          key: deno-cache-${{ runner.os }}-${{ hashFiles('deno.json', 'deno.lock') }}
          restore-keys: |
            deno-cache-${{ runner.os }}-

      - name: Build site
        run: deno task build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
